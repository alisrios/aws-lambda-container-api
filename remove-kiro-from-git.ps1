# Script PowerShell para remover a pasta .kiro do reposit√≥rio remoto
# mantendo-a apenas localmente

Write-Host "üîç Verificando se a pasta .kiro est√° sendo rastreada pelo Git..." -ForegroundColor Blue

# Verificar se a pasta .kiro est√° no √≠ndice do Git
$kiroTracked = $false
try {
    git ls-files --error-unmatch .kiro/ 2>$null | Out-Null
    $kiroTracked = $true
} catch {
    $kiroTracked = $false
}

if ($kiroTracked) {
    Write-Host "üìÅ Pasta .kiro encontrada no controle de vers√£o" -ForegroundColor Yellow
    Write-Host "üóëÔ∏è  Removendo .kiro do controle de vers√£o..." -ForegroundColor Yellow
    
    # Remove a pasta do √≠ndice do Git mas mant√©m localmente
    git rm -r --cached .kiro/
    
    Write-Host "‚úÖ Pasta .kiro removida do controle de vers√£o" -ForegroundColor Green
    Write-Host "üìù A pasta ainda existe localmente mas n√£o ser√° mais rastreada" -ForegroundColor Cyan
    
    # Verificar se .gitignore j√° cont√©m .kiro/
    $gitignoreContent = Get-Content .gitignore -ErrorAction SilentlyContinue
    if ($gitignoreContent -contains ".kiro/" -or $gitignoreContent -contains "# Kiro IDE directory (local only)") {
        Write-Host "‚úÖ .kiro/ j√° est√° no .gitignore" -ForegroundColor Green
    } else {
        Write-Host "üìù Adicionando .kiro/ ao .gitignore..." -ForegroundColor Cyan
        Add-Content .gitignore "`n# Kiro IDE directory (local only)"
        Add-Content .gitignore ".kiro/"
        Write-Host "‚úÖ .kiro/ adicionado ao .gitignore" -ForegroundColor Green
    }
    
    Write-Host ""
    Write-Host "üìã Pr√≥ximos passos:" -ForegroundColor Cyan
    Write-Host "1. Fazer commit das mudan√ßas:" -ForegroundColor White
    Write-Host "   git add .gitignore" -ForegroundColor Gray
    Write-Host "   git commit -m 'Remove .kiro directory from version control'" -ForegroundColor Gray
    Write-Host ""
    Write-Host "2. Fazer push para o reposit√≥rio remoto:" -ForegroundColor White
    Write-Host "   git push origin main" -ForegroundColor Gray
    Write-Host ""
    Write-Host "‚ö†Ô∏è  A pasta .kiro ser√° removida do reposit√≥rio remoto mas permanecer√° local" -ForegroundColor Yellow
    
} else {
    Write-Host "‚úÖ A pasta .kiro n√£o est√° sendo rastreada pelo Git" -ForegroundColor Green
    Write-Host "‚ÑπÔ∏è  Nenhuma a√ß√£o necess√°ria - a pasta j√° √© apenas local" -ForegroundColor Cyan
    
    # Verificar se est√° no .gitignore
    $gitignoreContent = Get-Content .gitignore -ErrorAction SilentlyContinue
    if ($gitignoreContent -contains ".kiro/" -or $gitignoreContent -contains "# Kiro IDE directory (local only)") {
        Write-Host "‚úÖ .kiro/ j√° est√° no .gitignore" -ForegroundColor Green
    } else {
        Write-Host "üìù Garantindo que .kiro/ est√° no .gitignore..." -ForegroundColor Cyan
        Add-Content .gitignore "`n# Kiro IDE directory (local only)"
        Add-Content .gitignore ".kiro/"
        Write-Host "‚úÖ .kiro/ adicionado ao .gitignore" -ForegroundColor Green
        
        Write-Host ""
        Write-Host "üìã Fazer commit da atualiza√ß√£o do .gitignore:" -ForegroundColor Cyan
        Write-Host "   git add .gitignore" -ForegroundColor Gray
        Write-Host "   git commit -m 'Ensure .kiro directory is ignored'" -ForegroundColor Gray
        Write-Host "   git push origin main" -ForegroundColor Gray
    }
}

Write-Host ""
Write-Host "üéâ Processo conclu√≠do!" -ForegroundColor Green
Write-Host "üìÅ A pasta .kiro agora √© mantida apenas localmente" -ForegroundColor Cyan